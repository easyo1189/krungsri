==> It looks like we don't have access to your repo, but we'll try to clone it anyway.
==> Cloning from https://github.com/easyoo1123/krungsri
==> Checking out commit e78d1d61035a9835351bf5f2a74f0c1674689b75 in branch main
==> Using Node.js version 18.12.1 via /opt/render/project/src/.node-version
==> Docs on specifying a Node.js version: https://render.com/docs/node-version
==> Using Bun version 1.1.0 (default)
==> Docs on specifying a bun version: https://render.com/docs/bun-version
==> Running build command 'npm install; npm run build'...
added 600 packages, and audited 601 packages in 10s
92 packages are looking for funding
  run `npm fund` for details
5 moderate severity vulnerabilities
To address all issues (including breaking changes), run:
  npm audit fix --force
Run `npm audit` for details.
> rest-express@1.0.0 build
> vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist
vite v5.4.19 building for production...
transforming...
âœ“ 3869 modules transformed.
rendering chunks...
computing gzip size...
../dist/public/index.html                     2.43 kB â”‚ gzip:   1.02 kB
../dist/public/assets/index-BSEPBi64.css     80.22 kB â”‚ gzip:  13.86 kB
../dist/public/assets/index-C9FrCC5T.js   2,094.73 kB â”‚ gzip: 482.44 kB
(!) Some chunks are larger than 500 kB after minification. Consider:
- Using dynamic import() to code-split the application
- Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
- Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.
âœ“ built in 9.22s
  dist/index.js  97.0kb
âš¡ Done in 8ms
==> Uploading build...
==> Uploaded in 9.5s. Compression took 2.7s
==> Build successful ðŸŽ‰
==> Deploying...
==> Running 'npm run dev'
> rest-express@1.0.0 dev
> tsx server/index.ts
Running migrations...
3:34:38 PM [storage] Failed to initialize admin user: RangeError [ERR_SOCKET_BAD_PORT]: Port should be >= 0 and < 65536. Received NaN.
Error checking for existing tables, will attempt migration: RangeError [ERR_SOCKET_BAD_PORT]: Port should be >= 0 and < 65536. Received NaN.
    at __node_internal_captureLargerStackTrace (node:internal/errors:484:5)
    at new NodeError (node:internal/errors:393:5)
    at validatePort (node:internal/validators:372:11)
    at lookupAndConnect (node:net:1147:5)
    at Socket.connect (node:net:1113:5)
    at Connection.connect (/opt/render/project/src/node_modules/pg/lib/connection.js:43:17)
    at Client._connect (/opt/render/project/src/node_modules/pg/lib/client.js:117:11)
    at Client.connect (/opt/render/project/src/node_modules/pg/lib/client.js:166:12)
    at BoundPool.newClient (/opt/render/project/src/node_modules/pg-pool/index.js:241:12)
    at BoundPool.connect (/opt/render/project/src/node_modules/pg-pool/index.js:216:10)
    at BoundPool.query (/opt/render/project/src/node_modules/pg-pool/index.js:403:10)
    at <anonymous> (/opt/render/project/src/node_modules/src/node-postgres/session.ts:100:20)
    at Object.startActiveSpan (/opt/render/project/src/node_modules/src/tracing.ts:27:11)
    at <anonymous> (/opt/render/project/src/node_modules/src/node-postgres/session.ts:94:19)
    at Object.startActiveSpan (/opt/render/project/src/node_modules/src/tracing.ts:27:11)
    at NodePgPreparedQuery.execute (/opt/render/project/src/node_modules/src/node-postgres/session.ts:86:17)
    at QueryPromise.execute (/opt/render/project/src/node_modules/src/pg-core/db.ts:625:19)
    at QueryPromise.then (/opt/render/project/src/node_modules/src/query-promise.ts:31:15) {
  code: 'ERR_SOCKET_BAD_PORT'
}
Error running migrations: RangeError [ERR_SOCKET_BAD_PORT]: Port should be >= 0 and < 65536. Received NaN.
    at __node_internal_captureLargerStackTrace (node:internal/errors:484:5)
    at new NodeError (node:internal/errors:393:5)
    at validatePort (node:internal/validators:372:11)
    at lookupAndConnect (node:net:1147:5)
    at Socket.connect (node:net:1113:5)
    at Connection.connect (/opt/render/project/src/node_modules/pg/lib/connection.js:43:17)
    at Client._connect (/opt/render/project/src/node_modules/pg/lib/client.js:117:11)
    at Client.connect (/opt/render/project/src/node_modules/pg/lib/client.js:166:12)
    at BoundPool.newClient (/opt/render/project/src/node_modules/pg-pool/index.js:241:12)
    at BoundPool.connect (/opt/render/project/src/node_modules/pg-pool/index.js:216:10)
    at BoundPool.query (/opt/render/project/src/node_modules/pg-pool/index.js:403:10)
    at <anonymous> (/opt/render/project/src/node_modules/src/node-postgres/session.ts:100:20)
    at Object.startActiveSpan (/opt/render/project/src/node_modules/src/tracing.ts:27:11)
    at <anonymous> (/opt/render/project/src/node_modules/src/node-postgres/session.ts:94:19)
    at Object.startActiveSpan (/opt/render/project/src/node_modules/src/tracing.ts:27:11)
    at NodePgPreparedQuery.execute (/opt/render/project/src/node_modules/src/node-postgres/session.ts:86:17)
    at <anonymous> (/opt/render/project/src/node_modules/src/pg-core/session.ts:93:36)
    at Object.startActiveSpan (/opt/render/project/src/node_modules/src/tracing.ts:27:11)
    at NodePgSession.execute (/opt/render/project/src/node_modules/src/pg-core/session.ts:83:17)
    at PgDialect.migrate (/opt/render/project/src/node_modules/src/pg-core/dialect.ts:85:17)
    at migrate (/opt/render/project/src/node_modules/src/node-postgres/migrator.ts:10:19)
    at runMigrations (/opt/render/project/src/server/db.ts:46:13)
    at <anonymous> (/opt/render/project/src/server/index.ts:43:5) {
  code: 'ERR_SOCKET_BAD_PORT'
}
Continuing despite migration error...
3:34:39 PM [storage] Admin user created with ID: 1
3:34:39 PM [storage] Admin account created successfully
3:34:40 PM [backup] Backup file found, attempting to restore
3:34:40 PM [backup] Automatic backup system initialized
3:34:40 PM [backup] Automatic backup system initialized
3:34:40 PM [express] Attempting to start server on port 5000
3:34:40 PM [express] Server is running on port 5000
==> Your service is live ðŸŽ‰
3:34:44 PM [backup] Restoring backup from 2025-05-06T14:29:38.716Z
3:34:44 PM [backup] Restore completed successfully
3:34:45 PM [backup] Starting full database backup
3:34:45 PM [backup] Backup completed successfully